简洁的介绍：已实现列表下载功能，音频和低码率视屏下载，同时提供高清码率下载（需自己提供cookie）

此工具分为前段和后端分离式，采用UI和功能模块各自独立运行，提高了效率。

下载类函数：
  get_name(self, html)  
      - 功能：从 HTML 内容中提取视频标题
      - 使用正则表达式匹配 title 标签中的内容
      - 返回提取到的标题，如果没有匹配到则返回 None

  get_p(self, url)        [新增]
      - 功能：从 URL 中提取分 P（分集）参数
      - 使用正则表达式匹配 URL 中的 p 参数
      - 返回格式化的分 P 标记，如 "【P:1】| "
  
  safe_filename(self, filename)
      - 功能：处理文件名使其安全可用
      - 移除文件名中的非法字符（如 /*?:"<>|）
      - 如果文件名超过 255 字符则进行截断
      - 返回处理后的文件名
  
  download_file(self, url, file_path)     [增强]
      - 功能：下载文件并显示下载进度
      - 支持流式下载大文件
      - 添加了进度显示功能
      - 更详细的错误处理
      - 支持进度回调函数

  match_urls(self, content) [修改]
      - 功能：匹配音频和视频链接
      - 更新了音频匹配模式
      - 支持多种音频格式（30280.m4s 和 30216.m4s）

  save_links(self, audio_matches, video_matches, name)
      - 功能：将匹配到的音频和视频链接保存到文件
      - 在指定目录下创建 links.txt 文件
      - 分别保存音频和视频链接

  get_html(self, url)
      - 功能：获取网页的 HTML 内容
      - 发送 GET 请求获取页面内容
      - 设置编码为 utf-8
      - 返回页面的文本内容，如果请求失败则返回 None

  save_html(self, name, html) [新增]
      - 功能：保存网页的原始 HTML 内容
      - 将 HTML 保存到指定目录下的 html.txt 文件

  download_video_and_audio(self, url, headers)[增强]
      - 功能：主要的下载处理函数
      - 设置请求头和 URL
      - 获取网页内容
      - 提取视频标题
      - 创建保存目录
      - 匹配下载链接
      - 下载音频和视频文件
        - 增加了分 P 视频的支持
        - 增加了保存原始 HTML 的功能
        - 优化了文件命名逻辑

  set_progress_callback(self, callback)
      -进度条关于UI的初始设置

主GUI：
    实现列表下载
    较为精致的GUI界面
    预计将添加更多功能


主要改进：
  - 增加了分 P 视频的支持
  - 添加了下载进度显示
  - 增加了保存原始 HTML 功能
  - 改进了音频匹配模式
  - 优化了错误处理
  - 增强了日志记录
